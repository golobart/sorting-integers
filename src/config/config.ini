[General]
# Number of bytes for input file buffer, 0 no buffer at all
filebuffer = 2**16
# 1 to allow repetitions in the top n numbers, 0 do not repeat values (DEPRECATED, better set to 1)
allow_repeats = 1
# Where to calculate/store top n numbers, values py_array_insort (insort), py_array_insort2 (insort2), py_array_preall (preall), 
# py_list (list). The interleaced and parallelized mode must be run with py_array_insort
# the standalone version can be run with py_array_insort2, py_array_preall and py_list.
store_top = py_array_insort
#Desired average size of bucket in elements 
#(then number of buckets is nbig/bucket_average (next power of 2=2**k), index is value/2**(64-k)) to make div a bit shift
bucket_average = 2**16
# Folder where slices of input file are stored
slices_pool = ../data/pools/slices/
# Folder where presorted slices are reduced/consolidated
consolidation_pool = ../data/pools/consolidation/

[Logging]
# Enable (1) if we want to save logs into a file, 0 otherwise
enable = 0
# This is the log file if log to file enabled
filename = ../log/log.txt
# Open the log file in append (a) or overwrite (w) mode, do not use w in interleaced or parallel mode
filemode = a
format = [%%(asctime)s] %%(levelname)s:%%(filename)s:%%(funcName)s:%%(lineno)s: %%(message)s
datefmt = %%m/%%d/%%Y %%I:%%M:%%S %%p
# DEBUG -> INFO -> WARNING -> ERROR -> CRITICAL
level = INFO